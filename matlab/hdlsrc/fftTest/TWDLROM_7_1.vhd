-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\fftTest\TWDLROM_7_1.vhd
-- Created: 2022-11-30 00:07:34
-- 
-- Generated by MATLAB 9.13 and HDL Coder 4.0
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: TWDLROM_7_1
-- Source Path: fftTest/FFT/TWDLROM_7_1
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.fftTest_pkg.ALL;

ENTITY TWDLROM_7_1 IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        dout_6_1_vld                      :   IN    std_logic;
        twdl_7_1_re                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- sfix32_En30
        twdl_7_1_im                       :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En30
        );
END TWDLROM_7_1;


ARCHITECTURE rtl OF TWDLROM_7_1 IS

  -- Constants
  CONSTANT Twiddle_re_table_data          : vector_of_signed32(0 TO 127) := 
    (to_signed(1073741824, 32), to_signed(1073721611, 32), to_signed(1073660973, 32), to_signed(1073559913, 32),
     to_signed(1073418433, 32), to_signed(1073236540, 32), to_signed(1073014240, 32), to_signed(1072751542, 32),
     to_signed(1072448455, 32), to_signed(1072104991, 32), to_signed(1071721163, 32), to_signed(1071296985, 32),
     to_signed(1070832474, 32), to_signed(1070327646, 32), to_signed(1069782521, 32), to_signed(1069197120, 32),
     to_signed(1068571464, 32), to_signed(1067905576, 32), to_signed(1067199483, 32), to_signed(1066453210, 32),
     to_signed(1065666786, 32), to_signed(1064840240, 32), to_signed(1063973603, 32), to_signed(1063066909, 32),
     to_signed(1062120190, 32), to_signed(1061133483, 32), to_signed(1060106826, 32), to_signed(1059040255, 32),
     to_signed(1057933813, 32), to_signed(1056787540, 32), to_signed(1055601479, 32), to_signed(1054375676, 32),
     to_signed(1053110176, 32), to_signed(1051805027, 32), to_signed(1050460278, 32), to_signed(1049075980, 32),
     to_signed(1047652185, 32), to_signed(1046188946, 32), to_signed(1044686319, 32), to_signed(1043144360, 32),
     to_signed(1041563127, 32), to_signed(1039942680, 32), to_signed(1038283080, 32), to_signed(1036584389, 32),
     to_signed(1034846671, 32), to_signed(1033069992, 32), to_signed(1031254418, 32), to_signed(1029400018, 32),
     to_signed(1027506862, 32), to_signed(1025575020, 32), to_signed(1023604567, 32), to_signed(1021595575, 32),
     to_signed(1019548121, 32), to_signed(1017462281, 32), to_signed(1015338134, 32), to_signed(1013175761, 32),
     to_signed(1010975242, 32), to_signed(1008736660, 32), to_signed(1006460100, 32), to_signed(1004145648, 32),
     to_signed(1001793390, 32), to_signed(999403415, 32), to_signed(996975812, 32), to_signed(994510675, 32),
     to_signed(992008094, 32), to_signed(989468165, 32), to_signed(986890984, 32), to_signed(984276646, 32),
     to_signed(981625251, 32), to_signed(978936898, 32), to_signed(976211688, 32), to_signed(973449725, 32),
     to_signed(970651112, 32), to_signed(967815955, 32), to_signed(964944360, 32), to_signed(962036435, 32),
     to_signed(959092290, 32), to_signed(956112036, 32), to_signed(953095785, 32), to_signed(950043650, 32),
     to_signed(946955747, 32), to_signed(943832191, 32), to_signed(940673101, 32), to_signed(937478595, 32),
     to_signed(934248793, 32), to_signed(930983817, 32), to_signed(927683790, 32), to_signed(924348837, 32),
     to_signed(920979082, 32), to_signed(917574653, 32), to_signed(914135678, 32), to_signed(910662286, 32),
     to_signed(907154608, 32), to_signed(903612776, 32), to_signed(900036924, 32), to_signed(896427186, 32),
     to_signed(892783698, 32), to_signed(889106597, 32), to_signed(885396022, 32), to_signed(881652112, 32),
     to_signed(877875009, 32), to_signed(874064853, 32), to_signed(870221790, 32), to_signed(866345964, 32),
     to_signed(862437520, 32), to_signed(858496606, 32), to_signed(854523370, 32), to_signed(850517961, 32),
     to_signed(846480531, 32), to_signed(842411232, 32), to_signed(838310216, 32), to_signed(834177638, 32),
     to_signed(830013654, 32), to_signed(825818421, 32), to_signed(821592095, 32), to_signed(817334838, 32),
     to_signed(813046808, 32), to_signed(808728167, 32), to_signed(804379079, 32), to_signed(799999706, 32),
     to_signed(795590213, 32), to_signed(791150767, 32), to_signed(786681534, 32), to_signed(782182683, 32),
     to_signed(777654384, 32), to_signed(773096806, 32), to_signed(768510122, 32), to_signed(763894504, 32));  -- sfix32 [128]
  CONSTANT Twiddle_im_table_data          : vector_of_signed32(0 TO 127) := 
    (to_signed(0, 32), to_signed(-6588356, 32), to_signed(-13176464, 32), to_signed(-19764076, 32),
     to_signed(-26350943, 32), to_signed(-32936819, 32), to_signed(-39521455, 32), to_signed(-46104602, 32),
     to_signed(-52686014, 32), to_signed(-59265442, 32), to_signed(-65842639, 32), to_signed(-72417357, 32),
     to_signed(-78989349, 32), to_signed(-85558366, 32), to_signed(-92124163, 32), to_signed(-98686491, 32),
     to_signed(-105245103, 32), to_signed(-111799753, 32), to_signed(-118350194, 32), to_signed(-124896179, 32),
     to_signed(-131437462, 32), to_signed(-137973796, 32), to_signed(-144504935, 32), to_signed(-151030634, 32),
     to_signed(-157550647, 32), to_signed(-164064728, 32), to_signed(-170572633, 32), to_signed(-177074115, 32),
     to_signed(-183568930, 32), to_signed(-190056834, 32), to_signed(-196537583, 32), to_signed(-203010932, 32),
     to_signed(-209476638, 32), to_signed(-215934457, 32), to_signed(-222384147, 32), to_signed(-228825464, 32),
     to_signed(-235258165, 32), to_signed(-241682010, 32), to_signed(-248096755, 32), to_signed(-254502159, 32),
     to_signed(-260897982, 32), to_signed(-267283981, 32), to_signed(-273659918, 32), to_signed(-280025552, 32),
     to_signed(-286380643, 32), to_signed(-292724951, 32), to_signed(-299058239, 32), to_signed(-305380268, 32),
     to_signed(-311690799, 32), to_signed(-317989595, 32), to_signed(-324276419, 32), to_signed(-330551034, 32),
     to_signed(-336813204, 32), to_signed(-343062693, 32), to_signed(-349299266, 32), to_signed(-355522689, 32),
     to_signed(-361732726, 32), to_signed(-367929144, 32), to_signed(-374111709, 32), to_signed(-380280190, 32),
     to_signed(-386434353, 32), to_signed(-392573967, 32), to_signed(-398698801, 32), to_signed(-404808624, 32),
     to_signed(-410903207, 32), to_signed(-416982319, 32), to_signed(-423045732, 32), to_signed(-429093217, 32),
     to_signed(-435124548, 32), to_signed(-441139496, 32), to_signed(-447137835, 32), to_signed(-453119340, 32),
     to_signed(-459083786, 32), to_signed(-465030947, 32), to_signed(-470960600, 32), to_signed(-476872522, 32),
     to_signed(-482766489, 32), to_signed(-488642281, 32), to_signed(-494499676, 32), to_signed(-500338453, 32),
     to_signed(-506158392, 32), to_signed(-511959275, 32), to_signed(-517740883, 32), to_signed(-523502998, 32),
     to_signed(-529245404, 32), to_signed(-534967884, 32), to_signed(-540670223, 32), to_signed(-546352205, 32),
     to_signed(-552013618, 32), to_signed(-557654248, 32), to_signed(-563273883, 32), to_signed(-568872310, 32),
     to_signed(-574449320, 32), to_signed(-580004702, 32), to_signed(-585538248, 32), to_signed(-591049748, 32),
     to_signed(-596538995, 32), to_signed(-602005783, 32), to_signed(-607449906, 32), to_signed(-612871159, 32),
     to_signed(-618269338, 32), to_signed(-623644239, 32), to_signed(-628995660, 32), to_signed(-634323400, 32),
     to_signed(-639627258, 32), to_signed(-644907034, 32), to_signed(-650162530, 32), to_signed(-655393548, 32),
     to_signed(-660599890, 32), to_signed(-665781362, 32), to_signed(-670937767, 32), to_signed(-676068911, 32),
     to_signed(-681174602, 32), to_signed(-686254647, 32), to_signed(-691308855, 32), to_signed(-696337036, 32),
     to_signed(-701339000, 32), to_signed(-706314559, 32), to_signed(-711263525, 32), to_signed(-716185713, 32),
     to_signed(-721080937, 32), to_signed(-725949013, 32), to_signed(-730789757, 32), to_signed(-735602987, 32),
     to_signed(-740388522, 32), to_signed(-745146182, 32), to_signed(-749875788, 32), to_signed(-754577161, 32));  -- sfix32 [128]

  -- Signals
  SIGNAL Radix22TwdlMapping_cnt           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Radix22TwdlMapping_phase         : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Radix22TwdlMapping_octantReg1    : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Radix22TwdlMapping_twdlAddr_raw  : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Radix22TwdlMapping_twdlAddrMap   : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL Radix22TwdlMapping_twdl45Reg     : std_logic;
  SIGNAL Radix22TwdlMapping_dvldReg1      : std_logic;
  SIGNAL Radix22TwdlMapping_dvldReg2      : std_logic;
  SIGNAL Radix22TwdlMapping_cnt_next      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Radix22TwdlMapping_phase_next    : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Radix22TwdlMapping_octantReg1_next : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL Radix22TwdlMapping_twdlAddr_raw_next : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Radix22TwdlMapping_twdlAddrMap_next : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL Radix22TwdlMapping_twdl45Reg_next : std_logic;
  SIGNAL Radix22TwdlMapping_dvldReg1_next : std_logic;
  SIGNAL Radix22TwdlMapping_dvldReg2_next : std_logic;
  SIGNAL twdlAddr                         : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL twdlAddrVld                      : std_logic;
  SIGNAL twdlOctant                       : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL twdl45                           : std_logic;
  SIGNAL twiddleS_re                      : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL twiddleReg_re                    : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL twiddleS_im                      : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL twiddleReg_im                    : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL twdlOctantReg                    : unsigned(2 DOWNTO 0);  -- ufix3
  SIGNAL twdl45Reg                        : std_logic;
  SIGNAL twdl_7_1_re_tmp                  : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL twdl_7_1_im_tmp                  : signed(31 DOWNTO 0);  -- sfix32_En30

BEGIN
  -- Radix22TwdlMapping
  Radix22TwdlMapping_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Radix22TwdlMapping_octantReg1 <= to_unsigned(16#0#, 3);
      Radix22TwdlMapping_twdlAddr_raw <= to_unsigned(16#000#, 10);
      Radix22TwdlMapping_twdlAddrMap <= to_unsigned(16#00#, 7);
      Radix22TwdlMapping_twdl45Reg <= '0';
      Radix22TwdlMapping_dvldReg1 <= '0';
      Radix22TwdlMapping_dvldReg2 <= '0';
      Radix22TwdlMapping_cnt <= to_unsigned(16#00#, 8);
      Radix22TwdlMapping_phase <= to_unsigned(16#0#, 2);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Radix22TwdlMapping_cnt <= Radix22TwdlMapping_cnt_next;
        Radix22TwdlMapping_phase <= Radix22TwdlMapping_phase_next;
        Radix22TwdlMapping_octantReg1 <= Radix22TwdlMapping_octantReg1_next;
        Radix22TwdlMapping_twdlAddr_raw <= Radix22TwdlMapping_twdlAddr_raw_next;
        Radix22TwdlMapping_twdlAddrMap <= Radix22TwdlMapping_twdlAddrMap_next;
        Radix22TwdlMapping_twdl45Reg <= Radix22TwdlMapping_twdl45Reg_next;
        Radix22TwdlMapping_dvldReg1 <= Radix22TwdlMapping_dvldReg1_next;
        Radix22TwdlMapping_dvldReg2 <= Radix22TwdlMapping_dvldReg2_next;
      END IF;
    END IF;
  END PROCESS Radix22TwdlMapping_process;

  Radix22TwdlMapping_output : PROCESS (Radix22TwdlMapping_cnt, Radix22TwdlMapping_dvldReg1,
       Radix22TwdlMapping_dvldReg2, Radix22TwdlMapping_octantReg1,
       Radix22TwdlMapping_phase, Radix22TwdlMapping_twdl45Reg,
       Radix22TwdlMapping_twdlAddrMap, Radix22TwdlMapping_twdlAddr_raw,
       dout_6_1_vld)
    VARIABLE octant : unsigned(2 DOWNTO 0);
    VARIABLE cnt_cast : unsigned(9 DOWNTO 0);
    VARIABLE sub_cast : signed(21 DOWNTO 0);
    VARIABLE sub_temp : signed(21 DOWNTO 0);
    VARIABLE sub_cast_0 : signed(11 DOWNTO 0);
    VARIABLE sub_temp_0 : signed(11 DOWNTO 0);
    VARIABLE sub_cast_1 : signed(11 DOWNTO 0);
    VARIABLE sub_temp_1 : signed(11 DOWNTO 0);
    VARIABLE sub_cast_2 : signed(21 DOWNTO 0);
    VARIABLE sub_temp_2 : signed(21 DOWNTO 0);
    VARIABLE sub_cast_3 : signed(21 DOWNTO 0);
    VARIABLE sub_temp_3 : signed(21 DOWNTO 0);
  BEGIN
    sub_temp := to_signed(16#000000#, 22);
    sub_temp_0 := to_signed(16#000#, 12);
    sub_temp_1 := to_signed(16#000#, 12);
    sub_temp_2 := to_signed(16#000000#, 22);
    sub_temp_3 := to_signed(16#000000#, 22);
    cnt_cast := to_unsigned(16#000#, 10);
    sub_cast := to_signed(16#000000#, 22);
    sub_cast_0 := to_signed(16#000#, 12);
    sub_cast_1 := to_signed(16#000#, 12);
    sub_cast_2 := to_signed(16#000000#, 22);
    sub_cast_3 := to_signed(16#000000#, 22);
    Radix22TwdlMapping_cnt_next <= Radix22TwdlMapping_cnt;
    Radix22TwdlMapping_phase_next <= Radix22TwdlMapping_phase;
    Radix22TwdlMapping_twdlAddr_raw_next <= Radix22TwdlMapping_twdlAddr_raw;
    Radix22TwdlMapping_twdlAddrMap_next <= Radix22TwdlMapping_twdlAddrMap;
    Radix22TwdlMapping_twdl45Reg_next <= Radix22TwdlMapping_twdl45Reg;
    Radix22TwdlMapping_dvldReg2_next <= Radix22TwdlMapping_dvldReg1;
    Radix22TwdlMapping_dvldReg1_next <= dout_6_1_vld;
    CASE Radix22TwdlMapping_twdlAddr_raw IS
      WHEN "0010000000" =>
        octant := to_unsigned(16#0#, 3);
        Radix22TwdlMapping_twdl45Reg_next <= '1';
      WHEN "0100000000" =>
        octant := to_unsigned(16#1#, 3);
        Radix22TwdlMapping_twdl45Reg_next <= '0';
      WHEN "0110000000" =>
        octant := to_unsigned(16#2#, 3);
        Radix22TwdlMapping_twdl45Reg_next <= '1';
      WHEN "1000000000" =>
        octant := to_unsigned(16#3#, 3);
        Radix22TwdlMapping_twdl45Reg_next <= '0';
      WHEN "1010000000" =>
        octant := to_unsigned(16#4#, 3);
        Radix22TwdlMapping_twdl45Reg_next <= '1';
      WHEN OTHERS => 
        octant := Radix22TwdlMapping_twdlAddr_raw(9 DOWNTO 7);
        Radix22TwdlMapping_twdl45Reg_next <= '0';
    END CASE;
    Radix22TwdlMapping_octantReg1_next <= octant;
    CASE octant IS
      WHEN "000" =>
        Radix22TwdlMapping_twdlAddrMap_next <= Radix22TwdlMapping_twdlAddr_raw(6 DOWNTO 0);
      WHEN "001" =>
        sub_cast_0 := signed(resize(Radix22TwdlMapping_twdlAddr_raw, 12));
        sub_temp_0 := to_signed(16#100#, 12) - sub_cast_0;
        Radix22TwdlMapping_twdlAddrMap_next <= unsigned(sub_temp_0(6 DOWNTO 0));
      WHEN "010" =>
        sub_cast_1 := signed(resize(Radix22TwdlMapping_twdlAddr_raw, 12));
        sub_temp_1 := sub_cast_1 - to_signed(16#100#, 12);
        Radix22TwdlMapping_twdlAddrMap_next <= unsigned(sub_temp_1(6 DOWNTO 0));
      WHEN "011" =>
        sub_cast_2 := signed(resize(Radix22TwdlMapping_twdlAddr_raw & '0' & '0' & '0' & '0' & '0' & '0' & '0', 22));
        sub_temp_2 := to_signed(16#010000#, 22) - sub_cast_2;
        Radix22TwdlMapping_twdlAddrMap_next <= unsigned(sub_temp_2(13 DOWNTO 7));
      WHEN "100" =>
        sub_cast_3 := signed(resize(Radix22TwdlMapping_twdlAddr_raw & '0' & '0' & '0' & '0' & '0' & '0' & '0', 22));
        sub_temp_3 := sub_cast_3 - to_signed(16#010000#, 22);
        Radix22TwdlMapping_twdlAddrMap_next <= unsigned(sub_temp_3(13 DOWNTO 7));
      WHEN OTHERS => 
        sub_cast := signed(resize(Radix22TwdlMapping_twdlAddr_raw & '0' & '0' & '0' & '0' & '0' & '0' & '0', 22));
        sub_temp := to_signed(16#018000#, 22) - sub_cast;
        Radix22TwdlMapping_twdlAddrMap_next <= unsigned(sub_temp(13 DOWNTO 7));
    END CASE;
    IF Radix22TwdlMapping_phase = to_unsigned(16#0#, 2) THEN 
      Radix22TwdlMapping_twdlAddr_raw_next <= to_unsigned(16#000#, 10);
    ELSIF Radix22TwdlMapping_phase = to_unsigned(16#1#, 2) THEN 
      Radix22TwdlMapping_twdlAddr_raw_next <= resize(Radix22TwdlMapping_cnt, 10) sll 1;
    ELSIF Radix22TwdlMapping_phase = to_unsigned(16#2#, 2) THEN 
      Radix22TwdlMapping_twdlAddr_raw_next <= resize(Radix22TwdlMapping_cnt, 10);
    ELSE 
      cnt_cast := resize(Radix22TwdlMapping_cnt, 10);
      Radix22TwdlMapping_twdlAddr_raw_next <= (cnt_cast sll 1) + cnt_cast;
    END IF;
    IF dout_6_1_vld = '1' AND (Radix22TwdlMapping_cnt > to_unsigned(16#EF#, 8)) THEN 
      Radix22TwdlMapping_phase_next <= Radix22TwdlMapping_phase + to_unsigned(16#1#, 2);
    END IF;
    IF dout_6_1_vld = '1' THEN 
      Radix22TwdlMapping_cnt_next <= Radix22TwdlMapping_cnt + to_unsigned(16#10#, 8);
    END IF;
    twdlAddr <= Radix22TwdlMapping_twdlAddrMap;
    twdlAddrVld <= Radix22TwdlMapping_dvldReg2;
    twdlOctant <= Radix22TwdlMapping_octantReg1;
    twdl45 <= Radix22TwdlMapping_twdl45Reg;
  END PROCESS Radix22TwdlMapping_output;


  -- Twiddle ROM1
  twiddleS_re <= Twiddle_re_table_data(to_integer(twdlAddr));

  TWIDDLEROM_RE_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      twiddleReg_re <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        twiddleReg_re <= twiddleS_re;
      END IF;
    END IF;
  END PROCESS TWIDDLEROM_RE_process;


  -- Twiddle ROM2
  twiddleS_im <= Twiddle_im_table_data(to_integer(twdlAddr));

  TWIDDLEROM_IM_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      twiddleReg_im <= to_signed(0, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        twiddleReg_im <= twiddleS_im;
      END IF;
    END IF;
  END PROCESS TWIDDLEROM_IM_process;


  intdelay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      twdlOctantReg <= to_unsigned(16#0#, 3);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        twdlOctantReg <= twdlOctant;
      END IF;
    END IF;
  END PROCESS intdelay_process;


  intdelay_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      twdl45Reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        twdl45Reg <= twdl45;
      END IF;
    END IF;
  END PROCESS intdelay_1_process;


  -- Radix22TwdlOctCorr
  Radix22TwdlOctCorr_output : PROCESS (twdl45Reg, twdlOctantReg, twiddleReg_im, twiddleReg_re)
    VARIABLE twdlIn_re : signed(31 DOWNTO 0);
    VARIABLE twdlIn_im : signed(31 DOWNTO 0);
    VARIABLE cast : signed(32 DOWNTO 0);
    VARIABLE cast_0 : signed(32 DOWNTO 0);
    VARIABLE cast_1 : signed(32 DOWNTO 0);
    VARIABLE cast_2 : signed(32 DOWNTO 0);
    VARIABLE cast_3 : signed(32 DOWNTO 0);
    VARIABLE cast_4 : signed(32 DOWNTO 0);
    VARIABLE cast_5 : signed(32 DOWNTO 0);
    VARIABLE cast_6 : signed(32 DOWNTO 0);
    VARIABLE cast_7 : signed(32 DOWNTO 0);
    VARIABLE cast_8 : signed(32 DOWNTO 0);
    VARIABLE cast_9 : signed(32 DOWNTO 0);
    VARIABLE cast_10 : signed(32 DOWNTO 0);
  BEGIN
    cast_0 := to_signed(0, 33);
    cast_2 := to_signed(0, 33);
    cast_4 := to_signed(0, 33);
    cast_6 := to_signed(0, 33);
    cast_8 := to_signed(0, 33);
    cast_10 := to_signed(0, 33);
    cast := to_signed(0, 33);
    cast_1 := to_signed(0, 33);
    cast_3 := to_signed(0, 33);
    cast_5 := to_signed(0, 33);
    cast_7 := to_signed(0, 33);
    cast_9 := to_signed(0, 33);
    twdlIn_re := twiddleReg_re;
    twdlIn_im := twiddleReg_im;
    IF twdl45Reg = '1' THEN 
      CASE twdlOctantReg IS
        WHEN "000" =>
          twdlIn_re := to_signed(759250125, 32);
          twdlIn_im := to_signed(-759250125, 32);
        WHEN "010" =>
          twdlIn_re := to_signed(-759250125, 32);
          twdlIn_im := to_signed(-759250125, 32);
        WHEN "100" =>
          twdlIn_re := to_signed(-759250125, 32);
          twdlIn_im := to_signed(759250125, 32);
        WHEN OTHERS => 
          twdlIn_re := to_signed(759250125, 32);
          twdlIn_im := to_signed(-759250125, 32);
      END CASE;
    ELSE 
      CASE twdlOctantReg IS
        WHEN "000" =>
          NULL;
        WHEN "001" =>
          cast := resize(twiddleReg_im, 33);
          cast_0 :=  - (cast);
          twdlIn_re := cast_0(31 DOWNTO 0);
          cast_5 := resize(twiddleReg_re, 33);
          cast_6 :=  - (cast_5);
          twdlIn_im := cast_6(31 DOWNTO 0);
        WHEN "010" =>
          twdlIn_re := twiddleReg_im;
          cast_7 := resize(twiddleReg_re, 33);
          cast_8 :=  - (cast_7);
          twdlIn_im := cast_8(31 DOWNTO 0);
        WHEN "011" =>
          cast_1 := resize(twiddleReg_re, 33);
          cast_2 :=  - (cast_1);
          twdlIn_re := cast_2(31 DOWNTO 0);
          twdlIn_im := twiddleReg_im;
        WHEN "100" =>
          cast_3 := resize(twiddleReg_re, 33);
          cast_4 :=  - (cast_3);
          twdlIn_re := cast_4(31 DOWNTO 0);
          cast_9 := resize(twiddleReg_im, 33);
          cast_10 :=  - (cast_9);
          twdlIn_im := cast_10(31 DOWNTO 0);
        WHEN OTHERS => 
          twdlIn_re := twiddleReg_im;
          twdlIn_im := twiddleReg_re;
      END CASE;
    END IF;
    twdl_7_1_re_tmp <= twdlIn_re;
    twdl_7_1_im_tmp <= twdlIn_im;
  END PROCESS Radix22TwdlOctCorr_output;


  twdl_7_1_re <= std_logic_vector(twdl_7_1_re_tmp);

  twdl_7_1_im <= std_logic_vector(twdl_7_1_im_tmp);

END rtl;

