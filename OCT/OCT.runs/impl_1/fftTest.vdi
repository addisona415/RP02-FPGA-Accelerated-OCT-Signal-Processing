#-----------------------------------------------------------
# Vivado v2022.2 (64-bit)
# SW Build 3671981 on Fri Oct 14 05:00:03 MDT 2022
# IP Build 3669848 on Fri Oct 14 08:30:02 MDT 2022
# Start of session at: Thu Feb  9 17:10:17 2023
# Process ID: 12936
# Current directory: A:/School/Capstone/OCT/OCT.runs/impl_1
# Command line: vivado.exe -log fftTest.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source fftTest.tcl -notrace
# Log file: A:/School/Capstone/OCT/OCT.runs/impl_1/fftTest.vdi
# Journal file: A:/School/Capstone/OCT/OCT.runs/impl_1\vivado.jou
# Running On: HOLYSHITITWORKS, OS: Windows, CPU Frequency: 3800 MHz, CPU Physical cores: 16, Host memory: 34269 MB
#-----------------------------------------------------------
source fftTest.tcl -notrace
Command: link_design -top fftTest -part xc7a100tcsg324-3
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xc7a100tcsg324-3
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.227 . Memory (MB): peak = 1448.969 ; gain = 0.000
INFO: [Netlist 29-17] Analyzing 2491 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 1 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2022.2
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [A:/School/Capstone/OCT/OCT.srcs/constrs_1/new/pinconstraints.xdc]
INFO: [Constraints 18-483] create_clock: no pin(s)/port(s)/net(s) specified as objects, only virtual clock 'testClk' will be created. If you don't want this, please specify pin(s)/ports(s)/net(s) as objects to the command. [A:/School/Capstone/OCT/OCT.srcs/constrs_1/new/pinconstraints.xdc:98]
Finished Parsing XDC File [A:/School/Capstone/OCT/OCT.srcs/constrs_1/new/pinconstraints.xdc]
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.004 . Memory (MB): peak = 1615.875 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 235 instances were transformed.
  RAM16X1S => RAM32X1S (RAMS32): 84 instances
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 151 instances

8 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:07 ; elapsed = 00:00:07 . Memory (MB): peak = 1615.875 ; gain = 607.695
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a100t'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.671 . Memory (MB): peak = 1634.883 ; gain = 19.008

Starting Cache Timing Information Task
INFO: [Constraints 18-483] create_clock: no pin(s)/port(s)/net(s) specified as objects, only virtual clock 'testClk' will be created. If you don't want this, please specify pin(s)/ports(s)/net(s) as objects to the command. [A:/School/Capstone/OCT/OCT.srcs/constrs_1/new/pinconstraints.xdc:98]
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: 153330ffd

Time (s): cpu = 00:00:06 ; elapsed = 00:00:05 . Memory (MB): peak = 2214.215 ; gain = 579.332

Starting Logic Optimization Task

Phase 1 Retarget
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 1 Retarget | Checksum: 1cf36ef23

Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.663 . Memory (MB): peak = 2554.859 ; gain = 0.000
INFO: [Opt 31-389] Phase Retarget created 56 cells and removed 56 cells

Phase 2 Constant propagation
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Phase 2 Constant propagation | Checksum: 120f29366

Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.780 . Memory (MB): peak = 2554.859 ; gain = 0.000
INFO: [Opt 31-389] Phase Constant propagation created 0 cells and removed 0 cells

Phase 3 Sweep
Phase 3 Sweep | Checksum: 1106c1a1f

Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 2554.859 ; gain = 0.000
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 0 cells

Phase 4 BUFG optimization
Phase 4 BUFG optimization | Checksum: 1106c1a1f

Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 2554.859 ; gain = 0.000
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 5 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 5 Shift Register Optimization | Checksum: 1106c1a1f

Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 2554.859 ; gain = 0.000
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 6 Post Processing Netlist
Phase 6 Post Processing Netlist | Checksum: 1106c1a1f

Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 2554.859 ; gain = 0.000
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |              56  |              56  |                                              0  |
|  Constant propagation         |               0  |               0  |                                              0  |
|  Sweep                        |               0  |               0  |                                              0  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               0  |                                              0  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.027 . Memory (MB): peak = 2554.859 ; gain = 0.000
Ending Logic Optimization Task | Checksum: cceb4f76

Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 2554.859 ; gain = 0.000

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...
INFO: [Constraints 18-483] create_clock: no pin(s)/port(s)/net(s) specified as objects, only virtual clock 'testClk' will be created. If you don't want this, please specify pin(s)/ports(s)/net(s) as objects to the command. [A:/School/Capstone/OCT/OCT.srcs/constrs_1/new/pinconstraints.xdc:98]
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 9 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 0 WE to EN ports
Number of BRAM Ports augmented: 0 newly gated: 0 Total Ports: 18
Ending PowerOpt Patch Enables Task | Checksum: cceb4f76

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.072 . Memory (MB): peak = 2650.203 ; gain = 0.000
Ending Power Optimization Task | Checksum: cceb4f76

Time (s): cpu = 00:00:06 ; elapsed = 00:00:03 . Memory (MB): peak = 2650.203 ; gain = 95.344

Starting Final Cleanup Task
Ending Final Cleanup Task | Checksum: cceb4f76

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.002 . Memory (MB): peak = 2650.203 ; gain = 0.000

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.004 . Memory (MB): peak = 2650.203 ; gain = 0.000
Ending Netlist Obfuscation Task | Checksum: cceb4f76

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.006 . Memory (MB): peak = 2650.203 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
32 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:00:17 ; elapsed = 00:00:13 . Memory (MB): peak = 2650.203 ; gain = 1034.328
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.020 . Memory (MB): peak = 2650.203 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'A:/School/Capstone/OCT/OCT.runs/impl_1/fftTest_opt.dcp' has been generated.
INFO: [runtcl-4] Executing : report_drc -file fftTest_drc_opted.rpt -pb fftTest_drc_opted.pb -rpx fftTest_drc_opted.rpx
Command: report_drc -file fftTest_drc_opted.rpt -pb fftTest_drc_opted.pb -rpx fftTest_drc_opted.rpx
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2022.2/data/ip'.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 2-168] The results of DRC are in file A:/School/Capstone/OCT/OCT.runs/impl_1/fftTest_drc_opted.rpt.
report_drc completed successfully
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors, 42 Warnings
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 2 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.005 . Memory (MB): peak = 2650.203 ; gain = 0.000
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: b741cb10

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.010 . Memory (MB): peak = 2650.203 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.004 . Memory (MB): peak = 2650.203 ; gain = 0.000

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
INFO: [Constraints 18-483] create_clock: no pin(s)/port(s)/net(s) specified as objects, only virtual clock 'testClk' will be created. If you don't want this, please specify pin(s)/ports(s)/net(s) as objects to the command. [A:/School/Capstone/OCT/OCT.srcs/constrs_1/new/pinconstraints.xdc:98]
INFO: [Timing 38-35] Done setting XDC timing constraints.
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: f95617fd

Time (s): cpu = 00:00:03 ; elapsed = 00:00:03 . Memory (MB): peak = 2650.203 ; gain = 0.000

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 1ab0dcf66

Time (s): cpu = 00:00:04 ; elapsed = 00:00:03 . Memory (MB): peak = 2650.203 ; gain = 0.000

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 1ab0dcf66

Time (s): cpu = 00:00:04 ; elapsed = 00:00:03 . Memory (MB): peak = 2650.203 ; gain = 0.000
Phase 1 Placer Initialization | Checksum: 1ab0dcf66

Time (s): cpu = 00:00:04 ; elapsed = 00:00:03 . Memory (MB): peak = 2650.203 ; gain = 0.000

Phase 2 Global Placement

Phase 2.1 Floorplanning
Phase 2.1 Floorplanning | Checksum: 1ab0dcf66

Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 2650.203 ; gain = 0.000

Phase 2.2 Update Timing before SLR Path Opt
Phase 2.2 Update Timing before SLR Path Opt | Checksum: 1ab0dcf66

Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 2650.203 ; gain = 0.000

Phase 2.3 Post-Processing in Floorplanning
Phase 2.3 Post-Processing in Floorplanning | Checksum: 1ab0dcf66

Time (s): cpu = 00:00:04 ; elapsed = 00:00:04 . Memory (MB): peak = 2650.203 ; gain = 0.000

Phase 2.4 Global Placement Core
WARNING: [Place 46-29] Timing had been disabled during Placer and, therefore, physical synthesis in Placer will be skipped.
Phase 2.4 Global Placement Core | Checksum: ffc998af

Time (s): cpu = 00:00:11 ; elapsed = 00:00:07 . Memory (MB): peak = 2650.203 ; gain = 0.000
Phase 2 Global Placement | Checksum: ffc998af

Time (s): cpu = 00:00:11 ; elapsed = 00:00:07 . Memory (MB): peak = 2650.203 ; gain = 0.000

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: ffc998af

Time (s): cpu = 00:00:11 ; elapsed = 00:00:07 . Memory (MB): peak = 2650.203 ; gain = 0.000

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 1ba903e99

Time (s): cpu = 00:00:11 ; elapsed = 00:00:08 . Memory (MB): peak = 2650.203 ; gain = 0.000

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 1cc06335e

Time (s): cpu = 00:00:12 ; elapsed = 00:00:08 . Memory (MB): peak = 2650.203 ; gain = 0.000

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 1a806285f

Time (s): cpu = 00:00:12 ; elapsed = 00:00:08 . Memory (MB): peak = 2650.203 ; gain = 0.000

Phase 3.5 Small Shape Detail Placement
Phase 3.5 Small Shape Detail Placement | Checksum: 14be5e099

Time (s): cpu = 00:00:14 ; elapsed = 00:00:11 . Memory (MB): peak = 2650.203 ; gain = 0.000

Phase 3.6 Re-assign LUT pins
Phase 3.6 Re-assign LUT pins | Checksum: 14be5e099

Time (s): cpu = 00:00:15 ; elapsed = 00:00:11 . Memory (MB): peak = 2650.203 ; gain = 0.000

Phase 3.7 Pipeline Register Optimization
Phase 3.7 Pipeline Register Optimization | Checksum: 1a1f78bab

Time (s): cpu = 00:00:15 ; elapsed = 00:00:11 . Memory (MB): peak = 2650.203 ; gain = 0.000
Phase 3 Detail Placement | Checksum: 1a1f78bab

Time (s): cpu = 00:00:15 ; elapsed = 00:00:12 . Memory (MB): peak = 2650.203 ; gain = 0.000

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
Phase 4.1 Post Commit Optimization | Checksum: 1a1f78bab

Time (s): cpu = 00:00:15 ; elapsed = 00:00:12 . Memory (MB): peak = 2650.203 ; gain = 0.000

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 1a1f78bab

Time (s): cpu = 00:00:15 ; elapsed = 00:00:12 . Memory (MB): peak = 2650.203 ; gain = 0.000

Phase 4.3 Placer Reporting

Phase 4.3.1 Print Estimated Congestion
INFO: [Place 30-612] Post-Placement Estimated Congestion 
 ____________________________________________________
|           | Global Congestion | Short Congestion  |
| Direction | Region Size       | Region Size       |
|___________|___________________|___________________|
|      North|                1x1|                2x2|
|___________|___________________|___________________|
|      South|                1x1|                2x2|
|___________|___________________|___________________|
|       East|                1x1|                2x2|
|___________|___________________|___________________|
|       West|                1x1|                2x2|
|___________|___________________|___________________|

Phase 4.3.1 Print Estimated Congestion | Checksum: 1a1f78bab

Time (s): cpu = 00:00:16 ; elapsed = 00:00:12 . Memory (MB): peak = 2650.203 ; gain = 0.000
Phase 4.3 Placer Reporting | Checksum: 1a1f78bab

Time (s): cpu = 00:00:16 ; elapsed = 00:00:12 . Memory (MB): peak = 2650.203 ; gain = 0.000

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.005 . Memory (MB): peak = 2650.203 ; gain = 0.000

Time (s): cpu = 00:00:16 ; elapsed = 00:00:12 . Memory (MB): peak = 2650.203 ; gain = 0.000
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 1bb7701e6

Time (s): cpu = 00:00:16 ; elapsed = 00:00:12 . Memory (MB): peak = 2650.203 ; gain = 0.000
Ending Placer Task | Checksum: 165501c44

Time (s): cpu = 00:00:16 ; elapsed = 00:00:12 . Memory (MB): peak = 2650.203 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
52 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:00:18 ; elapsed = 00:00:13 . Memory (MB): peak = 2650.203 ; gain = 0.000
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:03 ; elapsed = 00:00:01 . Memory (MB): peak = 2650.203 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'A:/School/Capstone/OCT/OCT.runs/impl_1/fftTest_placed.dcp' has been generated.
INFO: [runtcl-4] Executing : report_io -file fftTest_io_placed.rpt
report_io: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.041 . Memory (MB): peak = 2650.203 ; gain = 0.000
INFO: [runtcl-4] Executing : report_utilization -file fftTest_utilization_placed.rpt -pb fftTest_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file fftTest_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.043 . Memory (MB): peak = 2650.203 ; gain = 0.000
Command: phys_opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a100t'

Starting Initial Update Timing Task

Time (s): cpu = 00:00:01 ; elapsed = 00:00:01 . Memory (MB): peak = 2650.203 ; gain = 0.000
INFO: [Vivado_Tcl 4-235] No timing constraint found. The netlist was not modified.
INFO: [Common 17-83] Releasing license: Implementation
60 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
phys_opt_design completed successfully
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:03 ; elapsed = 00:00:01 . Memory (MB): peak = 2650.203 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'A:/School/Capstone/OCT/OCT.runs/impl_1/fftTest_physopt.dcp' has been generated.
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a100t'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 2 CPUs

Phase 1 Build RT Design
Checksum: PlaceDB: b4d9ff11 ConstDB: 0 ShapeSum: b0761d33 RouteDB: 0
Post Restoration Checksum: NetGraph: a55cd6aa NumContArr: 2db336fd Constraints: 0 Timing: 0
Phase 1 Build RT Design | Checksum: d3100da7

Time (s): cpu = 00:00:24 ; elapsed = 00:00:20 . Memory (MB): peak = 2775.008 ; gain = 100.836

Phase 2 Router Initialization

Phase 2.1 Fix Topology Constraints
Phase 2.1 Fix Topology Constraints | Checksum: d3100da7

Time (s): cpu = 00:00:24 ; elapsed = 00:00:20 . Memory (MB): peak = 2783.684 ; gain = 109.512

Phase 2.2 Pre Route Cleanup
Phase 2.2 Pre Route Cleanup | Checksum: d3100da7

Time (s): cpu = 00:00:24 ; elapsed = 00:00:20 . Memory (MB): peak = 2783.684 ; gain = 109.512
 Number of Nodes with overlaps = 0

Phase 2.3 Update Timing
Phase 2.3 Update Timing | Checksum: e0235b2c

Time (s): cpu = 00:00:26 ; elapsed = 00:00:22 . Memory (MB): peak = 2825.562 ; gain = 151.391

Router Utilization Summary
  Global Vertical Routing Utilization    = 0 %
  Global Horizontal Routing Utilization  = 0 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 22909
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 22909
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 2 Router Initialization | Checksum: e0235b2c

Time (s): cpu = 00:00:27 ; elapsed = 00:00:22 . Memory (MB): peak = 2825.562 ; gain = 151.391

Phase 3 Initial Routing

Phase 3.1 Global Routing
Phase 3.1 Global Routing | Checksum: e0235b2c

Time (s): cpu = 00:00:27 ; elapsed = 00:00:22 . Memory (MB): peak = 2825.562 ; gain = 151.391
Phase 3 Initial Routing | Checksum: dab53ebf

Time (s): cpu = 00:00:29 ; elapsed = 00:00:23 . Memory (MB): peak = 2851.895 ; gain = 177.723

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 833
 Number of Nodes with overlaps = 0
Phase 4.1 Global Iteration 0 | Checksum: 106754379

Time (s): cpu = 00:00:33 ; elapsed = 00:00:26 . Memory (MB): peak = 2851.895 ; gain = 177.723
Phase 4 Rip-up And Reroute | Checksum: 106754379

Time (s): cpu = 00:00:33 ; elapsed = 00:00:26 . Memory (MB): peak = 2851.895 ; gain = 177.723

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp
Phase 5.1 Delay CleanUp | Checksum: 106754379

Time (s): cpu = 00:00:33 ; elapsed = 00:00:26 . Memory (MB): peak = 2851.895 ; gain = 177.723

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 106754379

Time (s): cpu = 00:00:33 ; elapsed = 00:00:26 . Memory (MB): peak = 2851.895 ; gain = 177.723
Phase 5 Delay and Skew Optimization | Checksum: 106754379

Time (s): cpu = 00:00:33 ; elapsed = 00:00:26 . Memory (MB): peak = 2851.895 ; gain = 177.723

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 106754379

Time (s): cpu = 00:00:34 ; elapsed = 00:00:26 . Memory (MB): peak = 2851.895 ; gain = 177.723
Phase 6.1 Hold Fix Iter | Checksum: 106754379

Time (s): cpu = 00:00:34 ; elapsed = 00:00:26 . Memory (MB): peak = 2851.895 ; gain = 177.723
Phase 6 Post Hold Fix | Checksum: 106754379

Time (s): cpu = 00:00:34 ; elapsed = 00:00:26 . Memory (MB): peak = 2851.895 ; gain = 177.723

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 4.09283 %
  Global Horizontal Routing Utilization  = 4.63548 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 106754379

Time (s): cpu = 00:00:34 ; elapsed = 00:00:26 . Memory (MB): peak = 2851.895 ; gain = 177.723

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 106754379

Time (s): cpu = 00:00:34 ; elapsed = 00:00:27 . Memory (MB): peak = 2851.895 ; gain = 177.723

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: fc45cf1c

Time (s): cpu = 00:00:35 ; elapsed = 00:00:28 . Memory (MB): peak = 2851.895 ; gain = 177.723

Phase 10 Post Router Timing
Phase 10 Post Router Timing | Checksum: fc45cf1c

Time (s): cpu = 00:00:35 ; elapsed = 00:00:28 . Memory (MB): peak = 2851.895 ; gain = 177.723
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:00:35 ; elapsed = 00:00:28 . Memory (MB): peak = 2851.895 ; gain = 177.723

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
69 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:00:37 ; elapsed = 00:00:29 . Memory (MB): peak = 2851.895 ; gain = 201.691
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:03 ; elapsed = 00:00:01 . Memory (MB): peak = 2851.895 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'A:/School/Capstone/OCT/OCT.runs/impl_1/fftTest_routed.dcp' has been generated.
INFO: [runtcl-4] Executing : report_drc -file fftTest_drc_routed.rpt -pb fftTest_drc_routed.pb -rpx fftTest_drc_routed.rpx
Command: report_drc -file fftTest_drc_routed.rpt -pb fftTest_drc_routed.pb -rpx fftTest_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 2-168] The results of DRC are in file A:/School/Capstone/OCT/OCT.runs/impl_1/fftTest_drc_routed.rpt.
report_drc completed successfully
INFO: [runtcl-4] Executing : report_methodology -file fftTest_methodology_drc_routed.rpt -pb fftTest_methodology_drc_routed.pb -rpx fftTest_methodology_drc_routed.rpx
Command: report_methodology -file fftTest_methodology_drc_routed.rpt -pb fftTest_methodology_drc_routed.pb -rpx fftTest_methodology_drc_routed.rpx
INFO: [Constraints 18-483] create_clock: no pin(s)/port(s)/net(s) specified as objects, only virtual clock 'testClk' will be created. If you don't want this, please specify pin(s)/ports(s)/net(s) as objects to the command. [A:/School/Capstone/OCT/OCT.srcs/constrs_1/new/pinconstraints.xdc:98]
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 2 threads
INFO: [Vivado_Tcl 2-1520] The results of Report Methodology are in file A:/School/Capstone/OCT/OCT.runs/impl_1/fftTest_methodology_drc_routed.rpt.
report_methodology completed successfully
INFO: [runtcl-4] Executing : report_power -file fftTest_power_routed.rpt -pb fftTest_power_summary_routed.pb -rpx fftTest_power_routed.rpx
Command: report_power -file fftTest_power_routed.rpt -pb fftTest_power_summary_routed.pb -rpx fftTest_power_routed.rpx
INFO: [Constraints 18-483] create_clock: no pin(s)/port(s)/net(s) specified as objects, only virtual clock 'testClk' will be created. If you don't want this, please specify pin(s)/ports(s)/net(s) as objects to the command. [A:/School/Capstone/OCT/OCT.srcs/constrs_1/new/pinconstraints.xdc:98]
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
83 Infos, 1 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
INFO: [runtcl-4] Executing : report_route_status -file fftTest_route_status.rpt -pb fftTest_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -report_unconstrained -file fftTest_timing_summary_routed.rpt -pb fftTest_timing_summary_routed.pb -rpx fftTest_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -3, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
INFO: [runtcl-4] Executing : report_incremental_reuse -file fftTest_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file fftTest_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file fftTest_bus_skew_routed.rpt -pb fftTest_bus_skew_routed.pb -rpx fftTest_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -3, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
Command: write_bitstream -force fftTest.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7a100t'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7a100t'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC CFGBVS-1] Missing CFGBVS and CONFIG_VOLTAGE Design Properties: Neither the CFGBVS nor CONFIG_VOLTAGE voltage property is set in the current_design.  Configuration bank voltage select (CFGBVS) must be set to VCCO or GND, and CONFIG_VOLTAGE must be set to the correct configuration voltage, in order to determine the I/O voltage support for the pins in bank 0.  It is suggested to specify these either using the 'Edit Device Properties' function in the GUI or directly in the XDC file using the following syntax:

 set_property CFGBVS value1 [current_design]
 #where value1 is either VCCO or GND

 set_property CONFIG_VOLTAGE value2 [current_design]
 #where value2 is the voltage provided to configuration bank 0

Refer to the device configuration user guide for more information.
WARNING: [DRC CHECK-3] Report rule limit reached: REQP-1839 rule limit reached: 20 violations have been found.
WARNING: [DRC CHECK-3] Report rule limit reached: REQP-1840 rule limit reached: 20 violations have been found.
WARNING: [DRC DPIP-1] Input pipelining: DSP Magnitude_Square_imag_square input Magnitude_Square_imag_square/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP Magnitude_Square_imag_square input Magnitude_Square_imag_square/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP Magnitude_Square_imag_square__0 input Magnitude_Square_imag_square__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP Magnitude_Square_imag_square__0 input Magnitude_Square_imag_square__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP Magnitude_Square_imag_square__1 input Magnitude_Square_imag_square__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP Magnitude_Square_imag_square__1 input Magnitude_Square_imag_square__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP Magnitude_Square_imag_square__2 input Magnitude_Square_imag_square__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP Magnitude_Square_imag_square__2 input Magnitude_Square_imag_square__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP Magnitude_Square_imag_square__3 input Magnitude_Square_imag_square__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP Magnitude_Square_imag_square__3 input Magnitude_Square_imag_square__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP Magnitude_Square_real_square input Magnitude_Square_real_square/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP Magnitude_Square_real_square input Magnitude_Square_real_square/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP Magnitude_Square_real_square__0 input Magnitude_Square_real_square__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP Magnitude_Square_real_square__0 input Magnitude_Square_real_square__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP Magnitude_Square_real_square__1 input Magnitude_Square_real_square__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP Magnitude_Square_real_square__1 input Magnitude_Square_real_square__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP Magnitude_Square_real_square__2 input Magnitude_Square_real_square__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP Magnitude_Square_real_square__2 input Magnitude_Square_real_square__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP Magnitude_Square_real_square__3 input Magnitude_Square_real_square__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP Magnitude_Square_real_square__3 input Magnitude_Square_real_square__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp input u_FIR_Interpolation/add_temp/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp input u_FIR_Interpolation/add_temp/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_1 input u_FIR_Interpolation/add_temp_1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_1 input u_FIR_Interpolation/add_temp_1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_10 input u_FIR_Interpolation/add_temp_10/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_10 input u_FIR_Interpolation/add_temp_10/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_11 input u_FIR_Interpolation/add_temp_11/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_11 input u_FIR_Interpolation/add_temp_11/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_12 input u_FIR_Interpolation/add_temp_12/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_12 input u_FIR_Interpolation/add_temp_12/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_13 input u_FIR_Interpolation/add_temp_13/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_13 input u_FIR_Interpolation/add_temp_13/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_14 input u_FIR_Interpolation/add_temp_14/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_14 input u_FIR_Interpolation/add_temp_14/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_15 input u_FIR_Interpolation/add_temp_15/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_15 input u_FIR_Interpolation/add_temp_15/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_16 input u_FIR_Interpolation/add_temp_16/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_16 input u_FIR_Interpolation/add_temp_16/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_17 input u_FIR_Interpolation/add_temp_17/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_17 input u_FIR_Interpolation/add_temp_17/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_18 input u_FIR_Interpolation/add_temp_18/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_18 input u_FIR_Interpolation/add_temp_18/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_19 input u_FIR_Interpolation/add_temp_19/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_19 input u_FIR_Interpolation/add_temp_19/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_2 input u_FIR_Interpolation/add_temp_2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_2 input u_FIR_Interpolation/add_temp_2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_20 input u_FIR_Interpolation/add_temp_20/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_20 input u_FIR_Interpolation/add_temp_20/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_21 input u_FIR_Interpolation/add_temp_21/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_21 input u_FIR_Interpolation/add_temp_21/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_22 input u_FIR_Interpolation/add_temp_22/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_22 input u_FIR_Interpolation/add_temp_22/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_3 input u_FIR_Interpolation/add_temp_3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_3 input u_FIR_Interpolation/add_temp_3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_4 input u_FIR_Interpolation/add_temp_4/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_4 input u_FIR_Interpolation/add_temp_4/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_5 input u_FIR_Interpolation/add_temp_5/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_5 input u_FIR_Interpolation/add_temp_5/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_6 input u_FIR_Interpolation/add_temp_6/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_6 input u_FIR_Interpolation/add_temp_6/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_7 input u_FIR_Interpolation/add_temp_7/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_7 input u_FIR_Interpolation/add_temp_7/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_8 input u_FIR_Interpolation/add_temp_8/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_8 input u_FIR_Interpolation/add_temp_8/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_9 input u_FIR_Interpolation/add_temp_9/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/add_temp_9 input u_FIR_Interpolation/add_temp_9/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/product_23 input u_FIR_Interpolation/product_23/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP u_FIR_Interpolation/product_23 input u_FIR_Interpolation/product_23/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP Magnitude_Square_imag_square output Magnitude_Square_imag_square/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP Magnitude_Square_imag_square__0 output Magnitude_Square_imag_square__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP Magnitude_Square_imag_square__1 output Magnitude_Square_imag_square__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP Magnitude_Square_imag_square__2 output Magnitude_Square_imag_square__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP Magnitude_Square_imag_square__3 output Magnitude_Square_imag_square__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP Magnitude_Square_real_square output Magnitude_Square_real_square/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP Magnitude_Square_real_square__0 output Magnitude_Square_real_square__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP Magnitude_Square_real_square__1 output Magnitude_Square_real_square__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP Magnitude_Square_real_square__2 output Magnitude_Square_real_square__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP Magnitude_Square_real_square__3 output Magnitude_Square_real_square__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe10 output u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0 output u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe10 output u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0 output u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe10 output u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0 output u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe10 output u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0 output u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe10 output u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0 output u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe10 output u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0 output u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe10 output u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0 output u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe10 output u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0 output u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe10 output u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0 output u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe10 output u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0 output u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe10 output u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0 output u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe10 output u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0 output u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe10 output u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0 output u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe10 output u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0 output u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe10 output u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0 output u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe10 output u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0 output u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP u_FIR_Interpolation/add_temp_22 output u_FIR_Interpolation/add_temp_22/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP Magnitude_Square_imag_square multiplier stage Magnitude_Square_imag_square/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP Magnitude_Square_imag_square__0 multiplier stage Magnitude_Square_imag_square__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP Magnitude_Square_imag_square__1 multiplier stage Magnitude_Square_imag_square__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP Magnitude_Square_imag_square__2 multiplier stage Magnitude_Square_imag_square__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP Magnitude_Square_imag_square__3 multiplier stage Magnitude_Square_imag_square__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP Magnitude_Square_real_square multiplier stage Magnitude_Square_real_square/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP Magnitude_Square_real_square__0 multiplier stage Magnitude_Square_real_square__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP Magnitude_Square_real_square__1 multiplier stage Magnitude_Square_real_square__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP Magnitude_Square_real_square__2 multiplier stage Magnitude_Square_real_square__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP Magnitude_Square_real_square__3 multiplier stage Magnitude_Square_real_square__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe10 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe10 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe10 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe10 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe10 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe10 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe10 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe10 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe10 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe10 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe10 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe10 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe10 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe10 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe10 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe10 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP u_FIR_Interpolation/add_temp_22 multiplier stage u_FIR_Interpolation/add_temp_22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC RBOR-1] RAMB output registers: RAMB u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg output DOA (17) DOB (16) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
WARNING: [DRC RBOR-1] RAMB output registers: RAMB u_FFT/u_SDF1_3_1/u_dataMEM_im_0_3/ram_reg output DOA (18) DOB (17) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
WARNING: [DRC RBOR-1] RAMB output registers: RAMB u_FFT/u_SDF1_3_1/u_dataMEM_re_0_3/ram_reg output DOA (18) DOB (17) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
WARNING: [DRC RBOR-1] RAMB output registers: RAMB u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg output DOA (32) DOB (5) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
WARNING: [DRC RBOR-1] RAMB output registers: RAMB u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg output DOA (32) DOB (5) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
WARNING: [DRC RBOR-1] RAMB output registers: RAMB u_FFT/u_SDF2_2_1/u_dataMEM_im_0_2/ram_reg output DOA (18) DOB (16) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
WARNING: [DRC RBOR-1] RAMB output registers: RAMB u_FFT/u_SDF2_2_1/u_dataMEM_re_0_2/ram_reg output DOA (18) DOB (16) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
WARNING: [DRC RBOR-1] RAMB output registers: RAMB u_FFT/u_SDF2_4_1/u_dataMEM_im_0_4/ram_reg output DOA (18) DOB (18) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
WARNING: [DRC RBOR-1] RAMB output registers: RAMB u_FFT/u_SDF2_4_1/u_dataMEM_re_0_4/ram_reg output DOA (18) DOB (18) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ADDRARDADDR[10] (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/Q[4]) which is driven by a register (u_FFT/u_CTRL1_5_1/SDFController_rdAddr_reg_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ADDRARDADDR[6] (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/Q[0]) which is driven by a register (u_FFT/u_CTRL1_5_1/SDFController_rdAddr_reg_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ADDRARDADDR[7] (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/Q[1]) which is driven by a register (u_FFT/u_CTRL1_5_1/SDFController_rdAddr_reg_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ADDRARDADDR[8] (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/Q[2]) which is driven by a register (u_FFT/u_CTRL1_5_1/SDFController_rdAddr_reg_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ADDRARDADDR[9] (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/Q[3]) which is driven by a register (u_FFT/u_CTRL1_5_1/SDFController_rdAddr_reg_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ADDRBWRADDR[10] (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg_0[4]) which is driven by a register (u_FFT/u_SDF1_5_1/u_SDFCOMMUTATOR_5/SDFCummutator_wrAddr_reg_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ADDRBWRADDR[6] (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg_0[0]) which is driven by a register (u_FFT/u_SDF1_5_1/u_SDFCOMMUTATOR_5/SDFCummutator_wrAddr_reg_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ADDRBWRADDR[7] (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg_0[1]) which is driven by a register (u_FFT/u_SDF1_5_1/u_SDFCOMMUTATOR_5/SDFCummutator_wrAddr_reg_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ADDRBWRADDR[8] (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg_0[2]) which is driven by a register (u_FFT/u_SDF1_5_1/u_SDFCOMMUTATOR_5/SDFCummutator_wrAddr_reg_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ADDRBWRADDR[9] (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg_0[3]) which is driven by a register (u_FFT/u_SDF1_5_1/u_SDFCOMMUTATOR_5/SDFCummutator_wrAddr_reg_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ENBWREN (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/wr_en) which is driven by a register (u_FFT/u_SDF1_5_1/u_SDFCOMMUTATOR_5/SDFCummutator_wrEnb_reg_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg/ADDRARDADDR[10] (net: u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/Q[4]) which is driven by a register (u_FFT/u_CTRL1_5_1/SDFController_rdAddr_reg_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg/ADDRARDADDR[6] (net: u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/Q[0]) which is driven by a register (u_FFT/u_CTRL1_5_1/SDFController_rdAddr_reg_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg/ADDRARDADDR[7] (net: u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/Q[1]) which is driven by a register (u_FFT/u_CTRL1_5_1/SDFController_rdAddr_reg_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg/ADDRARDADDR[8] (net: u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/Q[2]) which is driven by a register (u_FFT/u_CTRL1_5_1/SDFController_rdAddr_reg_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg/ADDRARDADDR[9] (net: u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/Q[3]) which is driven by a register (u_FFT/u_CTRL1_5_1/SDFController_rdAddr_reg_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg/ADDRBWRADDR[10] (net: u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg_0[4]) which is driven by a register (u_FFT/u_SDF1_5_1/u_SDFCOMMUTATOR_5/SDFCummutator_wrAddr_reg_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg/ADDRBWRADDR[7] (net: u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg_0[1]) which is driven by a register (u_FFT/u_SDF1_5_1/u_SDFCOMMUTATOR_5/SDFCummutator_wrAddr_reg_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg/ADDRBWRADDR[8] (net: u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg_0[2]) which is driven by a register (u_FFT/u_SDF1_5_1/u_SDFCOMMUTATOR_5/SDFCummutator_wrAddr_reg_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1839] RAMB36 async control check: The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg/ADDRBWRADDR[9] (net: u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg_0[3]) which is driven by a register (u_FFT/u_SDF1_5_1/u_SDFCOMMUTATOR_5/SDFCummutator_wrAddr_reg_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRARDADDR[10] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/Q[5]) which is driven by a register (u_FFT/u_CTRL1_1_1/SDFController_rdAddr_reg_reg[5]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRARDADDR[11] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/Q[6]) which is driven by a register (u_FFT/u_CTRL1_1_1/SDFController_rdAddr_reg_reg[6]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRARDADDR[12] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/Q[7]) which is driven by a register (u_FFT/u_CTRL1_1_1/SDFController_rdAddr_reg_reg[7]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRARDADDR[13] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/Q[8]) which is driven by a register (u_FFT/u_CTRL1_1_1/SDFController_rdAddr_reg_reg[8]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRARDADDR[5] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/Q[0]) which is driven by a register (u_FFT/u_CTRL1_1_1/SDFController_rdAddr_reg_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRARDADDR[6] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/Q[1]) which is driven by a register (u_FFT/u_CTRL1_1_1/SDFController_rdAddr_reg_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRARDADDR[7] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/Q[2]) which is driven by a register (u_FFT/u_CTRL1_1_1/SDFController_rdAddr_reg_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRARDADDR[8] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/Q[3]) which is driven by a register (u_FFT/u_CTRL1_1_1/SDFController_rdAddr_reg_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRARDADDR[9] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/Q[4]) which is driven by a register (u_FFT/u_CTRL1_1_1/SDFController_rdAddr_reg_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRBWRADDR[10] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg_0[5]) which is driven by a register (u_FFT/u_SDF1_1_1/u_SDFCOMMUTATOR_1/SDFCummutator_wrAddr_reg_reg[5]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRBWRADDR[11] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg_0[6]) which is driven by a register (u_FFT/u_SDF1_1_1/u_SDFCOMMUTATOR_1/SDFCummutator_wrAddr_reg_reg[6]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRBWRADDR[12] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg_0[7]) which is driven by a register (u_FFT/u_SDF1_1_1/u_SDFCOMMUTATOR_1/SDFCummutator_wrAddr_reg_reg[7]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRBWRADDR[13] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg_0[8]) which is driven by a register (u_FFT/u_SDF1_1_1/u_SDFCOMMUTATOR_1/SDFCummutator_wrAddr_reg_reg[8]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRBWRADDR[5] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg_0[0]) which is driven by a register (u_FFT/u_SDF1_1_1/u_SDFCOMMUTATOR_1/SDFCummutator_wrAddr_reg_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRBWRADDR[6] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg_0[1]) which is driven by a register (u_FFT/u_SDF1_1_1/u_SDFCOMMUTATOR_1/SDFCummutator_wrAddr_reg_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRBWRADDR[7] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg_0[2]) which is driven by a register (u_FFT/u_SDF1_1_1/u_SDFCOMMUTATOR_1/SDFCummutator_wrAddr_reg_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRBWRADDR[8] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg_0[3]) which is driven by a register (u_FFT/u_SDF1_1_1/u_SDFCOMMUTATOR_1/SDFCummutator_wrAddr_reg_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRBWRADDR[9] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg_0[4]) which is driven by a register (u_FFT/u_SDF1_1_1/u_SDFCOMMUTATOR_1/SDFCummutator_wrAddr_reg_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ENBWREN (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/wr_en) which is driven by a register (u_FFT/u_SDF1_1_1/u_SDFCOMMUTATOR_1/SDFCummutator_wrEnb_reg_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
WARNING: [DRC REQP-1840] RAMB18 async control check: The RAMB18E1 u_FFT/u_SDF1_3_1/u_dataMEM_im_0_3/ram_reg has an input control pin u_FFT/u_SDF1_3_1/u_dataMEM_im_0_3/ram_reg/ADDRARDADDR[11] (net: u_FFT/u_SDF1_3_1/u_dataMEM_im_0_3/Q[6]) which is driven by a register (u_FFT/u_CTRL1_3_1/SDFController_rdAddr_reg_reg[6]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 238 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./fftTest.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Common 17-83] Releasing license: Implementation
11 Infos, 238 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:18 ; elapsed = 00:00:13 . Memory (MB): peak = 3408.730 ; gain = 495.676
INFO: [Common 17-206] Exiting Vivado at Thu Feb  9 17:12:05 2023...
