Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
---------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2022.2 (win64) Build 3671981 Fri Oct 14 05:00:03 MDT 2022
| Date         : Thu Feb  9 17:11:42 2023
| Host         : HOLYSHITITWORKS running 64-bit major release  (build 9200)
| Command      : report_drc -file fftTest_drc_routed.rpt -pb fftTest_drc_routed.pb -rpx fftTest_drc_routed.rpx
| Design       : fftTest
| Device       : xc7a100tcsg324-3
| Speed File   : -3
| Design State : Fully Routed
---------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 238
+-----------+----------+-----------------------------------------------------+------------+
| Rule      | Severity | Description                                         | Violations |
+-----------+----------+-----------------------------------------------------+------------+
| CFGBVS-1  | Warning  | Missing CFGBVS and CONFIG_VOLTAGE Design Properties | 1          |
| CHECK-3   | Warning  | Report rule limit reached                           | 2          |
| DPIP-1    | Warning  | Input pipelining                                    | 68         |
| DPOP-1    | Warning  | PREG Output pipelining                              | 43         |
| DPOP-2    | Warning  | MREG Output pipelining                              | 75         |
| RBOR-1    | Warning  | RAMB output registers                               | 9          |
| REQP-1839 | Warning  | RAMB36 async control check                          | 20         |
| REQP-1840 | Warning  | RAMB18 async control check                          | 20         |
+-----------+----------+-----------------------------------------------------+------------+

2. REPORT DETAILS
-----------------
CFGBVS-1#1 Warning
Missing CFGBVS and CONFIG_VOLTAGE Design Properties  
Neither the CFGBVS nor CONFIG_VOLTAGE voltage property is set in the current_design.  Configuration bank voltage select (CFGBVS) must be set to VCCO or GND, and CONFIG_VOLTAGE must be set to the correct configuration voltage, in order to determine the I/O voltage support for the pins in bank 0.  It is suggested to specify these either using the 'Edit Device Properties' function in the GUI or directly in the XDC file using the following syntax:

 set_property CFGBVS value1 [current_design]
 #where value1 is either VCCO or GND

 set_property CONFIG_VOLTAGE value2 [current_design]
 #where value2 is the voltage provided to configuration bank 0

Refer to the device configuration user guide for more information.
Related violations: <none>

CHECK-3#1 Warning
Report rule limit reached  
REQP-1839 rule limit reached: 20 violations have been found.
Related violations: <none>

CHECK-3#2 Warning
Report rule limit reached  
REQP-1840 rule limit reached: 20 violations have been found.
Related violations: <none>

DPIP-1#1 Warning
Input pipelining  
DSP Magnitude_Square_imag_square input Magnitude_Square_imag_square/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#2 Warning
Input pipelining  
DSP Magnitude_Square_imag_square input Magnitude_Square_imag_square/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#3 Warning
Input pipelining  
DSP Magnitude_Square_imag_square__0 input Magnitude_Square_imag_square__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#4 Warning
Input pipelining  
DSP Magnitude_Square_imag_square__0 input Magnitude_Square_imag_square__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#5 Warning
Input pipelining  
DSP Magnitude_Square_imag_square__1 input Magnitude_Square_imag_square__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#6 Warning
Input pipelining  
DSP Magnitude_Square_imag_square__1 input Magnitude_Square_imag_square__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#7 Warning
Input pipelining  
DSP Magnitude_Square_imag_square__2 input Magnitude_Square_imag_square__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#8 Warning
Input pipelining  
DSP Magnitude_Square_imag_square__2 input Magnitude_Square_imag_square__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#9 Warning
Input pipelining  
DSP Magnitude_Square_imag_square__3 input Magnitude_Square_imag_square__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#10 Warning
Input pipelining  
DSP Magnitude_Square_imag_square__3 input Magnitude_Square_imag_square__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#11 Warning
Input pipelining  
DSP Magnitude_Square_real_square input Magnitude_Square_real_square/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#12 Warning
Input pipelining  
DSP Magnitude_Square_real_square input Magnitude_Square_real_square/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#13 Warning
Input pipelining  
DSP Magnitude_Square_real_square__0 input Magnitude_Square_real_square__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#14 Warning
Input pipelining  
DSP Magnitude_Square_real_square__0 input Magnitude_Square_real_square__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#15 Warning
Input pipelining  
DSP Magnitude_Square_real_square__1 input Magnitude_Square_real_square__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#16 Warning
Input pipelining  
DSP Magnitude_Square_real_square__1 input Magnitude_Square_real_square__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#17 Warning
Input pipelining  
DSP Magnitude_Square_real_square__2 input Magnitude_Square_real_square__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#18 Warning
Input pipelining  
DSP Magnitude_Square_real_square__2 input Magnitude_Square_real_square__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#19 Warning
Input pipelining  
DSP Magnitude_Square_real_square__3 input Magnitude_Square_real_square__3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#20 Warning
Input pipelining  
DSP Magnitude_Square_real_square__3 input Magnitude_Square_real_square__3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#21 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp input u_FIR_Interpolation/add_temp/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#22 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp input u_FIR_Interpolation/add_temp/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#23 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_1 input u_FIR_Interpolation/add_temp_1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#24 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_1 input u_FIR_Interpolation/add_temp_1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#25 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_10 input u_FIR_Interpolation/add_temp_10/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#26 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_10 input u_FIR_Interpolation/add_temp_10/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#27 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_11 input u_FIR_Interpolation/add_temp_11/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#28 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_11 input u_FIR_Interpolation/add_temp_11/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#29 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_12 input u_FIR_Interpolation/add_temp_12/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#30 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_12 input u_FIR_Interpolation/add_temp_12/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#31 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_13 input u_FIR_Interpolation/add_temp_13/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#32 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_13 input u_FIR_Interpolation/add_temp_13/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#33 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_14 input u_FIR_Interpolation/add_temp_14/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#34 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_14 input u_FIR_Interpolation/add_temp_14/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#35 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_15 input u_FIR_Interpolation/add_temp_15/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#36 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_15 input u_FIR_Interpolation/add_temp_15/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#37 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_16 input u_FIR_Interpolation/add_temp_16/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#38 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_16 input u_FIR_Interpolation/add_temp_16/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#39 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_17 input u_FIR_Interpolation/add_temp_17/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#40 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_17 input u_FIR_Interpolation/add_temp_17/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#41 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_18 input u_FIR_Interpolation/add_temp_18/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#42 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_18 input u_FIR_Interpolation/add_temp_18/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#43 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_19 input u_FIR_Interpolation/add_temp_19/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#44 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_19 input u_FIR_Interpolation/add_temp_19/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#45 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_2 input u_FIR_Interpolation/add_temp_2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#46 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_2 input u_FIR_Interpolation/add_temp_2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#47 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_20 input u_FIR_Interpolation/add_temp_20/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#48 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_20 input u_FIR_Interpolation/add_temp_20/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#49 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_21 input u_FIR_Interpolation/add_temp_21/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#50 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_21 input u_FIR_Interpolation/add_temp_21/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#51 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_22 input u_FIR_Interpolation/add_temp_22/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#52 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_22 input u_FIR_Interpolation/add_temp_22/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#53 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_3 input u_FIR_Interpolation/add_temp_3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#54 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_3 input u_FIR_Interpolation/add_temp_3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#55 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_4 input u_FIR_Interpolation/add_temp_4/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#56 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_4 input u_FIR_Interpolation/add_temp_4/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#57 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_5 input u_FIR_Interpolation/add_temp_5/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#58 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_5 input u_FIR_Interpolation/add_temp_5/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#59 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_6 input u_FIR_Interpolation/add_temp_6/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#60 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_6 input u_FIR_Interpolation/add_temp_6/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#61 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_7 input u_FIR_Interpolation/add_temp_7/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#62 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_7 input u_FIR_Interpolation/add_temp_7/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#63 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_8 input u_FIR_Interpolation/add_temp_8/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#64 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_8 input u_FIR_Interpolation/add_temp_8/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#65 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_9 input u_FIR_Interpolation/add_temp_9/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#66 Warning
Input pipelining  
DSP u_FIR_Interpolation/add_temp_9 input u_FIR_Interpolation/add_temp_9/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#67 Warning
Input pipelining  
DSP u_FIR_Interpolation/product_23 input u_FIR_Interpolation/product_23/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#68 Warning
Input pipelining  
DSP u_FIR_Interpolation/product_23 input u_FIR_Interpolation/product_23/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-1#1 Warning
PREG Output pipelining  
DSP Magnitude_Square_imag_square output Magnitude_Square_imag_square/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#2 Warning
PREG Output pipelining  
DSP Magnitude_Square_imag_square__0 output Magnitude_Square_imag_square__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#3 Warning
PREG Output pipelining  
DSP Magnitude_Square_imag_square__1 output Magnitude_Square_imag_square__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#4 Warning
PREG Output pipelining  
DSP Magnitude_Square_imag_square__2 output Magnitude_Square_imag_square__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#5 Warning
PREG Output pipelining  
DSP Magnitude_Square_imag_square__3 output Magnitude_Square_imag_square__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#6 Warning
PREG Output pipelining  
DSP Magnitude_Square_real_square output Magnitude_Square_real_square/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#7 Warning
PREG Output pipelining  
DSP Magnitude_Square_real_square__0 output Magnitude_Square_real_square__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#8 Warning
PREG Output pipelining  
DSP Magnitude_Square_real_square__1 output Magnitude_Square_real_square__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#9 Warning
PREG Output pipelining  
DSP Magnitude_Square_real_square__2 output Magnitude_Square_real_square__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#10 Warning
PREG Output pipelining  
DSP Magnitude_Square_real_square__3 output Magnitude_Square_real_square__3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#11 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe10 output u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#12 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0 output u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#13 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe10 output u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#14 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0 output u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#15 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe10 output u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#16 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0 output u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#17 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe10 output u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#18 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0 output u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#19 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe10 output u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#20 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0 output u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#21 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe10 output u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#22 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0 output u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#23 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe10 output u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#24 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0 output u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#25 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe10 output u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#26 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0 output u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#27 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe10 output u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#28 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0 output u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#29 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe10 output u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#30 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0 output u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#31 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe10 output u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#32 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0 output u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#33 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe10 output u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#34 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0 output u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#35 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe10 output u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#36 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0 output u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#37 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe10 output u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#38 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0 output u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#39 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe10 output u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#40 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0 output u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#41 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe10 output u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe10/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#42 Warning
PREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0 output u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#43 Warning
PREG Output pipelining  
DSP u_FIR_Interpolation/add_temp_22 output u_FIR_Interpolation/add_temp_22/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP Magnitude_Square_imag_square multiplier stage Magnitude_Square_imag_square/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP Magnitude_Square_imag_square__0 multiplier stage Magnitude_Square_imag_square__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP Magnitude_Square_imag_square__1 multiplier stage Magnitude_Square_imag_square__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#4 Warning
MREG Output pipelining  
DSP Magnitude_Square_imag_square__2 multiplier stage Magnitude_Square_imag_square__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#5 Warning
MREG Output pipelining  
DSP Magnitude_Square_imag_square__3 multiplier stage Magnitude_Square_imag_square__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#6 Warning
MREG Output pipelining  
DSP Magnitude_Square_real_square multiplier stage Magnitude_Square_real_square/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#7 Warning
MREG Output pipelining  
DSP Magnitude_Square_real_square__0 multiplier stage Magnitude_Square_real_square__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#8 Warning
MREG Output pipelining  
DSP Magnitude_Square_real_square__1 multiplier stage Magnitude_Square_real_square__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#9 Warning
MREG Output pipelining  
DSP Magnitude_Square_real_square__2 multiplier stage Magnitude_Square_real_square__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#10 Warning
MREG Output pipelining  
DSP Magnitude_Square_real_square__3 multiplier stage Magnitude_Square_real_square__3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#11 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe10 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#12 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#13 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#14 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#15 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe10 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#16 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#17 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#18 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#19 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe10 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#20 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#21 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#22 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#23 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe10 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#24 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#25 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#26 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_3_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#27 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe10 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#28 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#29 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#30 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#31 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe10 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#32 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#33 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#34 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#35 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe10 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#36 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#37 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#38 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#39 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe10 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#40 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#41 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#42 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_5_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#43 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe10 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#44 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#45 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#46 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#47 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe10 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#48 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#49 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#50 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#51 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe10 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#52 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#53 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#54 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#55 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe10 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#56 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#57 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#58 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_7_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#59 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe10 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#60 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#61 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#62 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_im_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#63 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe10 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#64 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#65 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#66 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult1_re_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#67 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe10 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#68 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#69 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#70 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_im_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#71 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe10 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#72 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe10__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#73 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#74 Warning
MREG Output pipelining  
DSP u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg__0 multiplier stage u_FFT/u_SDF1_9_1/u_MUL4/Complex4Multiply_mult2_re_pipe1_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#75 Warning
MREG Output pipelining  
DSP u_FIR_Interpolation/add_temp_22 multiplier stage u_FIR_Interpolation/add_temp_22/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

RBOR-1#1 Warning
RAMB output registers  
RAMB u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg output DOA (17) DOB (16) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#2 Warning
RAMB output registers  
RAMB u_FFT/u_SDF1_3_1/u_dataMEM_im_0_3/ram_reg output DOA (18) DOB (17) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#3 Warning
RAMB output registers  
RAMB u_FFT/u_SDF1_3_1/u_dataMEM_re_0_3/ram_reg output DOA (18) DOB (17) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#4 Warning
RAMB output registers  
RAMB u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg output DOA (32) DOB (5) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#5 Warning
RAMB output registers  
RAMB u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg output DOA (32) DOB (5) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#6 Warning
RAMB output registers  
RAMB u_FFT/u_SDF2_2_1/u_dataMEM_im_0_2/ram_reg output DOA (18) DOB (16) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#7 Warning
RAMB output registers  
RAMB u_FFT/u_SDF2_2_1/u_dataMEM_re_0_2/ram_reg output DOA (18) DOB (16) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#8 Warning
RAMB output registers  
RAMB u_FFT/u_SDF2_4_1/u_dataMEM_im_0_4/ram_reg output DOA (18) DOB (18) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#9 Warning
RAMB output registers  
RAMB u_FFT/u_SDF2_4_1/u_dataMEM_re_0_4/ram_reg output DOA (18) DOB (18) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

REQP-1839#1 Warning
RAMB36 async control check  
The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ADDRARDADDR[10] (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/Q[4]) which is driven by a register (u_FFT/u_CTRL1_5_1/SDFController_rdAddr_reg_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#2 Warning
RAMB36 async control check  
The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ADDRARDADDR[6] (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/Q[0]) which is driven by a register (u_FFT/u_CTRL1_5_1/SDFController_rdAddr_reg_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#3 Warning
RAMB36 async control check  
The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ADDRARDADDR[7] (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/Q[1]) which is driven by a register (u_FFT/u_CTRL1_5_1/SDFController_rdAddr_reg_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#4 Warning
RAMB36 async control check  
The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ADDRARDADDR[8] (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/Q[2]) which is driven by a register (u_FFT/u_CTRL1_5_1/SDFController_rdAddr_reg_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#5 Warning
RAMB36 async control check  
The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ADDRARDADDR[9] (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/Q[3]) which is driven by a register (u_FFT/u_CTRL1_5_1/SDFController_rdAddr_reg_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#6 Warning
RAMB36 async control check  
The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ADDRBWRADDR[10] (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg_0[4]) which is driven by a register (u_FFT/u_SDF1_5_1/u_SDFCOMMUTATOR_5/SDFCummutator_wrAddr_reg_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#7 Warning
RAMB36 async control check  
The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ADDRBWRADDR[6] (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg_0[0]) which is driven by a register (u_FFT/u_SDF1_5_1/u_SDFCOMMUTATOR_5/SDFCummutator_wrAddr_reg_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#8 Warning
RAMB36 async control check  
The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ADDRBWRADDR[7] (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg_0[1]) which is driven by a register (u_FFT/u_SDF1_5_1/u_SDFCOMMUTATOR_5/SDFCummutator_wrAddr_reg_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#9 Warning
RAMB36 async control check  
The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ADDRBWRADDR[8] (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg_0[2]) which is driven by a register (u_FFT/u_SDF1_5_1/u_SDFCOMMUTATOR_5/SDFCummutator_wrAddr_reg_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#10 Warning
RAMB36 async control check  
The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ADDRBWRADDR[9] (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg_0[3]) which is driven by a register (u_FFT/u_SDF1_5_1/u_SDFCOMMUTATOR_5/SDFCummutator_wrAddr_reg_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#11 Warning
RAMB36 async control check  
The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/ram_reg/ENBWREN (net: u_FFT/u_SDF1_5_1/u_dataMEM_im_0_5/wr_en) which is driven by a register (u_FFT/u_SDF1_5_1/u_SDFCOMMUTATOR_5/SDFCummutator_wrEnb_reg_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#12 Warning
RAMB36 async control check  
The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg/ADDRARDADDR[10] (net: u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/Q[4]) which is driven by a register (u_FFT/u_CTRL1_5_1/SDFController_rdAddr_reg_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#13 Warning
RAMB36 async control check  
The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg/ADDRARDADDR[6] (net: u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/Q[0]) which is driven by a register (u_FFT/u_CTRL1_5_1/SDFController_rdAddr_reg_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#14 Warning
RAMB36 async control check  
The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg/ADDRARDADDR[7] (net: u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/Q[1]) which is driven by a register (u_FFT/u_CTRL1_5_1/SDFController_rdAddr_reg_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#15 Warning
RAMB36 async control check  
The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg/ADDRARDADDR[8] (net: u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/Q[2]) which is driven by a register (u_FFT/u_CTRL1_5_1/SDFController_rdAddr_reg_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#16 Warning
RAMB36 async control check  
The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg/ADDRARDADDR[9] (net: u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/Q[3]) which is driven by a register (u_FFT/u_CTRL1_5_1/SDFController_rdAddr_reg_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#17 Warning
RAMB36 async control check  
The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg/ADDRBWRADDR[10] (net: u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg_0[4]) which is driven by a register (u_FFT/u_SDF1_5_1/u_SDFCOMMUTATOR_5/SDFCummutator_wrAddr_reg_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#18 Warning
RAMB36 async control check  
The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg/ADDRBWRADDR[7] (net: u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg_0[1]) which is driven by a register (u_FFT/u_SDF1_5_1/u_SDFCOMMUTATOR_5/SDFCummutator_wrAddr_reg_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#19 Warning
RAMB36 async control check  
The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg/ADDRBWRADDR[8] (net: u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg_0[2]) which is driven by a register (u_FFT/u_SDF1_5_1/u_SDFCOMMUTATOR_5/SDFCummutator_wrAddr_reg_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1839#20 Warning
RAMB36 async control check  
The RAMB36E1 u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg has an input control pin u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg/ADDRBWRADDR[9] (net: u_FFT/u_SDF1_5_1/u_dataMEM_re_0_5/ram_reg_0[3]) which is driven by a register (u_FFT/u_SDF1_5_1/u_SDFCOMMUTATOR_5/SDFCummutator_wrAddr_reg_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#1 Warning
RAMB18 async control check  
The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRARDADDR[10] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/Q[5]) which is driven by a register (u_FFT/u_CTRL1_1_1/SDFController_rdAddr_reg_reg[5]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#2 Warning
RAMB18 async control check  
The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRARDADDR[11] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/Q[6]) which is driven by a register (u_FFT/u_CTRL1_1_1/SDFController_rdAddr_reg_reg[6]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#3 Warning
RAMB18 async control check  
The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRARDADDR[12] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/Q[7]) which is driven by a register (u_FFT/u_CTRL1_1_1/SDFController_rdAddr_reg_reg[7]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#4 Warning
RAMB18 async control check  
The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRARDADDR[13] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/Q[8]) which is driven by a register (u_FFT/u_CTRL1_1_1/SDFController_rdAddr_reg_reg[8]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#5 Warning
RAMB18 async control check  
The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRARDADDR[5] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/Q[0]) which is driven by a register (u_FFT/u_CTRL1_1_1/SDFController_rdAddr_reg_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#6 Warning
RAMB18 async control check  
The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRARDADDR[6] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/Q[1]) which is driven by a register (u_FFT/u_CTRL1_1_1/SDFController_rdAddr_reg_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#7 Warning
RAMB18 async control check  
The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRARDADDR[7] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/Q[2]) which is driven by a register (u_FFT/u_CTRL1_1_1/SDFController_rdAddr_reg_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#8 Warning
RAMB18 async control check  
The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRARDADDR[8] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/Q[3]) which is driven by a register (u_FFT/u_CTRL1_1_1/SDFController_rdAddr_reg_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#9 Warning
RAMB18 async control check  
The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRARDADDR[9] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/Q[4]) which is driven by a register (u_FFT/u_CTRL1_1_1/SDFController_rdAddr_reg_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#10 Warning
RAMB18 async control check  
The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRBWRADDR[10] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg_0[5]) which is driven by a register (u_FFT/u_SDF1_1_1/u_SDFCOMMUTATOR_1/SDFCummutator_wrAddr_reg_reg[5]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#11 Warning
RAMB18 async control check  
The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRBWRADDR[11] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg_0[6]) which is driven by a register (u_FFT/u_SDF1_1_1/u_SDFCOMMUTATOR_1/SDFCummutator_wrAddr_reg_reg[6]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#12 Warning
RAMB18 async control check  
The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRBWRADDR[12] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg_0[7]) which is driven by a register (u_FFT/u_SDF1_1_1/u_SDFCOMMUTATOR_1/SDFCummutator_wrAddr_reg_reg[7]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#13 Warning
RAMB18 async control check  
The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRBWRADDR[13] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg_0[8]) which is driven by a register (u_FFT/u_SDF1_1_1/u_SDFCOMMUTATOR_1/SDFCummutator_wrAddr_reg_reg[8]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#14 Warning
RAMB18 async control check  
The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRBWRADDR[5] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg_0[0]) which is driven by a register (u_FFT/u_SDF1_1_1/u_SDFCOMMUTATOR_1/SDFCummutator_wrAddr_reg_reg[0]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#15 Warning
RAMB18 async control check  
The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRBWRADDR[6] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg_0[1]) which is driven by a register (u_FFT/u_SDF1_1_1/u_SDFCOMMUTATOR_1/SDFCummutator_wrAddr_reg_reg[1]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#16 Warning
RAMB18 async control check  
The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRBWRADDR[7] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg_0[2]) which is driven by a register (u_FFT/u_SDF1_1_1/u_SDFCOMMUTATOR_1/SDFCummutator_wrAddr_reg_reg[2]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#17 Warning
RAMB18 async control check  
The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRBWRADDR[8] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg_0[3]) which is driven by a register (u_FFT/u_SDF1_1_1/u_SDFCOMMUTATOR_1/SDFCummutator_wrAddr_reg_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#18 Warning
RAMB18 async control check  
The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ADDRBWRADDR[9] (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg_0[4]) which is driven by a register (u_FFT/u_SDF1_1_1/u_SDFCOMMUTATOR_1/SDFCummutator_wrAddr_reg_reg[4]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#19 Warning
RAMB18 async control check  
The RAMB18E1 u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg has an input control pin u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/ram_reg/ENBWREN (net: u_FFT/u_SDF1_1_1/u_dataMEM_re_0_1_generic/wr_en) which is driven by a register (u_FFT/u_SDF1_1_1/u_SDFCOMMUTATOR_1/SDFCummutator_wrEnb_reg_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#20 Warning
RAMB18 async control check  
The RAMB18E1 u_FFT/u_SDF1_3_1/u_dataMEM_im_0_3/ram_reg has an input control pin u_FFT/u_SDF1_3_1/u_dataMEM_im_0_3/ram_reg/ADDRARDADDR[11] (net: u_FFT/u_SDF1_3_1/u_dataMEM_im_0_3/Q[6]) which is driven by a register (u_FFT/u_CTRL1_3_1/SDFController_rdAddr_reg_reg[6]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>


